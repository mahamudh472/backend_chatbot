{
	"info": {
		"_postman_id": "e2ff8e3b-8a4b-4768-a444-40384c06a099",
		"name": "backend_chatbot",
		"description": "## ðŸ“š API Documentation\n\n### Base URL\n```\nhttp://127.0.0.1:8000/\n```\n\n### Authentication Endpoints\n\n#### User Signup\nCreates a new user account and sends verification email.\n\n- **URL**: `POST /signup/`\n- **Request Body**:\n  ```json\n  {\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"secure_password123\"\n  }\n  ```\n- **Success Response** (201):\n  ```json\n  {\n    \"success\": true,\n    \"message\": \"User signed up successfully\",\n    \"user\": {\n      \"username\": \"john_doe\",\n      \"email\": \"john@example.com\"\n    }\n  }\n  ```\n- **Error Responses**:\n  - `400 Bad Request`: Username or email already exists\n  - `400 Bad Request`: Invalid or missing required fields\n\n#### User Login\nAuthenticates user and returns JWT tokens.\n\n- **URL**: `POST /login/`\n- **Request Body** (supports both username and email):\n  ```json\n  {\n    \"username\": \"john_doe\",  // or \"email\": \"john@example.com\"\n    \"password\": \"secure_password123\"\n  }\n  ```\n- **Success Response** (200):\n  ```json\n  {\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }\n  ```\n- **Error Response** (401):\n  ```json\n  {\n    \"error\": \"Invalid credentials\"\n  }\n  ```\n\n#### JWT Token Refresh\nRefreshes the access token using a valid refresh token.\n\n- **URL**: `POST /token/refresh/`\n- **Request Body**:\n  ```json\n  {\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }\n  ```\n- **Success Response** (200):\n  ```json\n  {\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }\n  ```\n\n### Chat Endpoints\n\n#### Get Chat History\nRetrieves all chat messages for the authenticated user.\n\n- **URL**: `GET /chat-history/`\n- **Headers**: `Authorization: Bearer <access_token>`\n- **Success Response** (200):\n  ```json\n  [\n    {\n      \"id\": 1,\n      \"user\": \"john_doe\",\n      \"message\": \"What is the company's mission?\",\n      \"response\": \"Our company's mission is to provide...\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ]\n  ```\n\n#### Send Chat Message\nSends a message to the AI chatbot and receives a response using RAG pipeline.\n\n- **URL**: `POST /chat/`\n- **Headers**: `Authorization: Bearer <access_token>`\n- **Request Body**:\n  ```json\n  {\n    \"message\": \"What are the company's remote work policies?\"\n  }\n  ```\n- **Success Response** (200):\n  ```json\n  {\n    \"response\": \"Based on our HR policy documents, the company supports flexible remote work arrangements...\",\n    \"provider\": \"Google Gemini\"\n  }\n  ```\n- **Error Response** (400):\n  ```json\n  {\n    \"error\": \"Message content is required\"\n  }\n  ```\n\n### System Information Endpoints\n\n#### Vector Store Statistics\nReturns information about the loaded knowledge base.\n\n- **URL**: `GET /vectorstore/stats/`\n- **Headers**: `Authorization: Bearer <access_token>`\n- **Success Response** (200):\n  ```json\n  {\n    \"total_chunks\": 21,\n    \"total_files\": 10,\n    \"files\": [\n      \"api_docs_001.txt\",\n      \"hr_policy_001.txt\",\n      \"company_history_001.txt\"\n    ]\n  }\n  ```\n\n#### AI Provider Status\nShows the status and configuration of available AI providers.\n\n- **URL**: `GET /ai/status/`\n- **Headers**: `Authorization: Bearer <access_token>`\n- **Success Response** (200):\n  ```json\n  {\n    \"active_provider\": \"Google Gemini\",\n    \"google_available\": true,\n    \"openai_available\": false,\n    \"providers\": {\n      \"google\": {\n        \"chat_model\": \"gemini-1.5-flash\",\n        \"embedding_model\": \"embedding-001\"\n      },\n      \"openai\": {\n        \"chat_model\": \"gpt-4o-mini\",\n        \"embedding_model\": \"text-embedding-3-small\"\n      }\n    }\n  }\n  ```\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38510294"
	},
	"item": [
		{
			"name": "signup",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test3\",\n    \"email\": \"test3@mail.com\",\n    \"password\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:8000/signup/",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"signup",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"",
							"if (data.access){",
							"    pm.environment.set(\"access_token\", data.access)",
							"}",
							"if (data.refresh){",
							"    pm.environment.set(\"refresh_token\", data.refresh)",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test\",\n    \"password\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:8000/login/",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "chat-history",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8000/chat-history/",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"chat-history",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "127.0.0.1:8000/chat/",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"message\": \"What is your purpose?\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:8000/chat/",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"chat",
						""
					]
				}
			},
			"response": []
		}
	]
}